plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
}

ext.majorVersion = 7
ext.minorVersion = 4
ext.minecraftVersion = "1.16.2"
sourceCompatibility = 1.8
targetCompatibility = 1.8

// Suppiled by Jenkins
ext.buildNumber = System.env.BUILD_NUMBER == null ? "x"                : "$System.env.BUILD_NUMBER"
ext.mavenDirectory = System.env.MAVEN_DIR == null ? "$projectDir/repo" : "$System.env.MAVEN_DIR"
ext.jdDirectory = System.env.JAVADOCS_DIR == null ? null               : "$System.env.JAVADOCS_DIR"

// Search for spigot nms jar file
String spigotNmsPath = "";
if (System.env.NMS_JAR != null) {
    // use NMS_JAR if it's explicitly specified
    spigotNmsPath = "$System.env.NMS_JAR"
    if (new File(spigotNmsPath).exists()) {
        logger.warn("NMS jar is set manually: ${spigotNmsPath}")
    } else {
        throw new GradleException("NMS jar not found: ${spigotNmsPath}")
    }
} else if (new File("${mavenDirectory}/spigot-${minecraftVersion}-latest.jar").exists()) {
    // ci environment
    spigotNmsPath = "${mavenDirectory}/spigot-${minecraftVersion}-latest.jar"
} else {
    // check local dir (dev environment)
    spigotNmsPath = "${projectDir}/../nms_binaries/spigot-${minecraftVersion}.jar"
    if (!(new File(spigotNmsPath).exists())) {
        // nms not found, download from nyaaci
        def f = new File(spigotNmsPath)
        println "Downloading spigot-${minecraftVersion}.jar"
        f.getParentFile().mkdirs();
        new URL("https://ci.nyaacat.com/maven/spigot-${minecraftVersion}-latest.jar").withInputStream{ i -> f.withOutputStream{ it << i }}
    }
}
println ("Found NMS jar: ${spigotNmsPath}")

// Version used for distribution. Different from maven repo
group = "cat.nyaa"
archivesBaseName = "NyaaCore-mc$minecraftVersion"
version = "$majorVersion.$minorVersion.$buildNumber"

// extra compile warnings
compileJava {
    options.compilerArgs += ["-Xlint:deprecation"]
    options.encoding = 'UTF-8'
}

repositories {
    jcenter()
    maven { name 'Spigot';      url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { name 'Sonatype';    url 'https://oss.sonatype.org/content/groups/public' }
    maven { name 'vault-repo';  url 'http://nexus.hc.to/content/repositories/pub_releases' }
    maven { name 'EssentialsX'; url 'https://ci.ender.zone/plugin/repository/everything' }
    maven { name 'NyaaCat';     url 'https://ci.nyaacat.com/maven/' }
    maven { name 'aikar';     url 'https://repo.aikar.co/content/groups/aikar/' }
}

dependencies {
    // spigot dependencies
    compileOnly "org.spigotmc:spigot-api:$minecraftVersion-R0.1-SNAPSHOT"
    compileOnly 'io.netty:netty-all:4.1.25.Final' // netty is shadowed inside spigot jar
    compileOnly files(spigotNmsPath)    // for NMS

    // other plugins
    compileOnly('net.milkbowl.vault:VaultAPI:1.7') { transitive = false }  // soft dep
    compileOnly('net.ess3:EssentialsX:2.17.1') { transitive = false }      // soft dep

    // 3rd party packages to be shadowed
    api 'com.udojava:EvalEx:2.1'
    shadow 'com.udojava:EvalEx:2.1'
    api 'co.aikar:taskchain-bukkit:3.7.2'
    shadow "co.aikar:taskchain-bukkit:3.7.2"

    // Testing
    testImplementation 'junit:junit:4.12'
    testImplementation files(spigotNmsPath)
    testImplementation 'org.mockito:mockito-core:2.18.3'
    testImplementation 'org.xerial:sqlite-jdbc:3.21.0.1'
    testImplementation 'ch.vorburger.mariaDB4j:mariaDB4j:2.2.3'
}

// artifacts
shadowJar {
    archiveName = "${archivesBaseName}-${version}-shadowed.${extension}"
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.java.srcDirs
}
// write javadocs to an external folder which can be served via nginx
if (ext.jdDirectory != null) {
    javadoc.destinationDir = file("${jdDirectory}/nyaacore-${version}")
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

processResources { // modify version string
    filesMatching("**/plugin.yml") {
        expand 'version': project.version
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact sourcesJar
            artifact javadocJar
            groupId "cat.nyaa"
            artifactId "nyaacore"
            version "$majorVersion.$minorVersion-SNAPSHOT"
            from components.java
        }
    }
    repositories {
        maven {
            url "$mavenDirectory"
        }
    }
}

javadoc {
    (options as StandardJavadocDocletOptions).with {
        links 'https://docs.oracle.com/javase/8/docs/api/'
        links 'https://hub.spigotmc.org/javadocs/spigot/'
        links 'https://google.github.io/guava/releases/21.0/api/docs/'
        links 'https://ci.md-5.net/job/BungeeCord/ws/chat/target/apidocs/'

        locale 'en_US'
        encoding 'UTF-8'
        docEncoding 'UTF-8'
        addBooleanOption('keywords', true)
        addStringOption('Xdoclint:none', '-quiet')

        if (JavaVersion.current() > JavaVersion.VERSION_1_9) {
            options.addBooleanOption('html5', true)
        }

        windowTitle = "NyaaCore Javadoc"
        docTitle = "NyaaCore (mc$minecraftVersion-${project.version})"
    }
}
